// L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng hi·ªán t·∫°i
const user = JSON.parse(sessionStorage.getItem("currentUser"));
const nutDangNhap = document.getElementById("nut-dang-nhap");
let users = JSON.parse(localStorage.getItem("users")) || [];
const userr = users.find(u => u.email === user?.email);

// C·∫≠p nh·∫≠t t√™n v√† zeni hi·ªán t·∫°i
const tenUser = document.getElementById("ten-user");
const zeniHienTai = document.getElementById("zeni-hientai");
if (!user) {
    tenUser.textContent = "Ch∆∞a ƒëƒÉng nh·∫≠p";
    zeniHienTai.textContent = "0";
    nutDangNhap.textContent = "ƒêƒÉng nh·∫≠p";
    nutDangNhap.onclick = () => {
    window.location.href = "dangnhap.html"; // chuy·ªÉn t·ªõi trang ƒëƒÉng nh·∫≠p
    };
} else {
    tenUser.textContent = userr.username;
    zeniHienTai.textContent = userr.kimcuong || 0;
    let tongZeniDaNap = 0;
    try {
    userr.history.forEach(log => {
        tongZeniDaNap += log.zeni;
    });
    } catch (err) {
    tongZeniDaNap = 0;
    }
    document.getElementById("cap-bac").textContent = getCapBac(tongZeniDaNap);
    capNhatLichSu();
    nutDangNhap.textContent = "ƒêƒÉng xu·∫•t";
    nutDangNhap.onclick = logout;
}

// Sinh m√£ code ng·∫´u nhi√™n
function randomCode(length = 10) {
    const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';
    let result = '';
    for (let i = 0; i < length; i++) {
    let randomIndex = parseInt(Math.random() * chars.length);
    let randomChar = chars[randomIndex];
    result += randomChar;
    }
    return result;
}

// Mua v·∫≠t ph·∫©m
function muaVatPham(ma, gia) {
    if (!user) {
    showToast("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p!");
    return;
    }
    if ((userr.kimcuong || 0) < gia) {
    showToast("‚ùå Kh√¥ng ƒë·ªß Zeni!");
    return;
    }
    userr.items = userr.items || [];
    if (userr.items.find(i => i.id === ma)) {
    showToast("‚ö†Ô∏è B·∫°n ƒë√£ mua v·∫≠t ph·∫©m n√†y r·ªìi!");
    return;
    }

    const code = randomCode();
    const thoiGian = new Date().toLocaleString();

    userr.kimcuong -= gia;
    userr.items.push({ id: ma, code, gia, time: thoiGian });
    localStorage.setItem("users", JSON.stringify(users));
    zeniHienTai.textContent = userr.kimcuong;
    showToast(`‚úÖ Mua th√†nh c√¥ng! Code: ${code}`);
    capNhatLichSu();
}

// C·∫≠p nh·∫≠t b·∫£ng l·ªãch s·ª≠ mua
function capNhatLichSu() {
    const tbody = document.getElementById("lich-su-mua");
    if (!userr.items) return;
    tbody.innerHTML = userr.items.map(i => `
    <tr>
        <td>${i.time}</td>
        <td>${i.id}</td>
        <td>${i.gia}</td>
        <td><button onclick="copyCode('${i.code}')">üìã Copy</button></td>
    </tr>
    `).join('');
}

// Copy m√£
function copyCode(code) {
    navigator.clipboard.writeText(code);
    showToast(`‚úÖ ƒê√£ copy m√£: ${code}`);
}
function getCapBac(tong) {
    if (tong < 1000) return "VIP 0";
    if (tong < 5000) return "VIP 1";
    if (tong < 10000) return "VIP 2";
    if (tong < 20000) return "VIP 3";
    if (tong < 50000) return "VIP 4";
    if (tong < 100000) return "VIP 5";
    if (tong < 200000) return "VIP 6";
    if (tong < 300000) return "VIP 7";
    if (tong < 500000) return "VIP 8";
    return "üëë Huy·ªÅn Tho·∫°i R·ªìng Thi√™ng";
}
function getVipLevel(tong) {
    if (tong < 1000) return 0;
    if (tong < 5000) return 1;
    if (tong < 10000) return 2;
    if (tong < 20000) return 3;
    if (tong < 50000) return 4;
    if (tong < 100000) return 5;
    if (tong < 200000) return 6;
    if (tong < 300000) return 7;
    if (tong < 500000) return 8;
    return 9;
}

function tinhTongZeniNap() {
    let tong = 0;
    userr.history.forEach(log => tong += log.zeni);
    return tong;
}

function nhanQuaVip(ma, vipYeuCau) {
    if (!user) {
    showToast("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p!");
    return;
    }
    const tong = tinhTongZeniNap();
    const level = getVipLevel(tong);
    if (level < vipYeuCau) {
    showToast("‚ùå Ch∆∞a ƒë·ªß c·∫•p VIP ƒë·ªÉ nh·∫≠n g√≥i qu√† n√†y!");
    return;
    }
    userr.items = userr.items || [];
    if (userr.items.find(i => i.id === ma)) {
    showToast("‚ö†Ô∏è B·∫°n ƒë√£ nh·∫≠n g√≥i n√†y r·ªìi!");
    return;
    }

    const code = randomCode();
    const thoiGian = new Date().toLocaleString();

    userr.items.push({ id: ma, code, gia: 0, time: thoiGian });
    localStorage.setItem("users", JSON.stringify(users));
    showToast("üéÅ Nh·∫≠n g√≥i qu√† VIP th√†nh c√¥ng!");
    capNhatLichSu();
}

function muaVipGift(ma, vipYeuCau, gia) {
    if (!user) {
    showToast("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p!");
    return;
    }
    const tong = tinhTongZeniNap();
    const level = getVipLevel(tong);
    if (level < vipYeuCau) {
    showToast("‚ùå Ch∆∞a ƒë·ªß c·∫•p VIP ƒë·ªÉ mua g√≥i n√†y!");
    return;
    }

    if ((userr.kimcuong || 0) < gia) {
    showToast("‚ùå Kh√¥ng ƒë·ªß Zeni ƒë·ªÉ mua!");
    return;
    }
    userr.items = userr.items || [];
    if (userr.items.find(i => i.id === ma)) {
    showToast("‚ö†Ô∏è B·∫°n ƒë√£ mua g√≥i n√†y r·ªìi!");
    return;
    }

    const code = randomCode();
    const thoiGian = new Date().toLocaleString();

    userr.kimcuong -= gia;

    userr.items.push({ id: ma, code, gia, time: thoiGian });
    localStorage.setItem("users", JSON.stringify(users));
    zeniHienTai.textContent = userr.kimcuong;
    showToast("üéÅ Mua g√≥i VIP th√†nh c√¥ng!");
    capNhatLichSu();
}
function logout() {
    sessionStorage.removeItem("currentUser");
    showToast("‚úÖ ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
    setTimeout(() => location.reload(), 1000); 
}
document.getElementById("searchInput").addEventListener("input", function () {
const keyword = this.value.toLowerCase();
const allDiscussions = document.querySelectorAll(".item-card");
allDiscussions.forEach((div) => {
    const text = div.innerText.toLowerCase();
    if (text.includes(keyword)) {
    div.style.display = "block";
    } else {
    div.style.display = "none";
    }
});
});